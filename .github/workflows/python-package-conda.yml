name: CameraAI CI/CD Pipeline

on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    env:
      OPENCV_PACKAGE_VERSION: "4.10.0.82"  # Version để cài package
      OPENCV_RUNTIME_VERSION: "4.10.0"     # Version mà OpenCV runtime report

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        # Install essential OpenCV dependencies (compatible with Ubuntu 20.04+)
        sudo apt-get install -y \
          libgl1 \
          libglib2.0-0 \
          libsm6 \
          libxext6 \
          libxrender1 \
          libgomp1 \
          libgstreamer1.0-0 \
          libgstreamer-plugins-base1.0-0 \
          libgtk-3-0 \
          python3-dev
        
        # Try to install additional development packages (may not be available on all Ubuntu versions)
        sudo apt-get install -y \
          libavcodec-dev \
          libavformat-dev \
          libswscale-dev \
          libjpeg-dev \
          libpng-dev \
          libtiff-dev \
          libatlas-base-dev \
          libtbb2 \
          libtbb-dev || echo "Some optional packages not available, continuing..."
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Uninstall any existing OpenCV packages to avoid conflicts
        pip uninstall opencv-python opencv-contrib-python opencv-python-headless -y || true
        # Cài đặt OpenCV với version cụ thể từ biến môi trường
        pip install opencv-python==${{ env.OPENCV_PACKAGE_VERSION }}
        # Verify OpenCV package installation immediately
        pip show opencv-python | grep Version
        # Cài đặt các thư viện còn lại (trừ opencv-python vì đã cài ở trên)
        pip install streamlit>=1.28.0 ultralytics>=8.0.0 numpy>=1.24.0 mediapipe>=0.10.0 Pillow>=9.5.0
        pip install pytest flake8
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv,venv,.git,__pycache__
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=.venv,venv,.git,__pycache__
        
    - name: Verify OpenCV version and functionality
      run: |
        # Debug: Show all OpenCV-related packages
        pip list | grep -i opencv || echo "No OpenCV packages found"
        # Show OpenCV runtime version
        python -c "import cv2; print(f'OpenCV version: {cv2.__version__}')"
        # Test basic functionality (most important)
        python -c "import cv2; import numpy as np; img = np.zeros((100, 100, 3), dtype=np.uint8); gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY); print('✅ OpenCV basic operations work')"
        # Accept any 4.x version as long as functionality works
        python -c "import cv2; version = cv2.__version__; assert version.startswith('4.'), f'Expected OpenCV 4.x, got {version}'; print(f'✅ OpenCV {version} is acceptable')"
        
    - name: Test import statements
      run: |
        python -c "import streamlit; print('Streamlit OK')"
        python -c "import cv2; print('OpenCV OK')" 
        python -c "import numpy; print('NumPy OK')"
        python -c "import ultralytics; print('Ultralytics OK')"
        python -c "import mediapipe; print('MediaPipe OK')"
        
    - name: Test application syntax
      run: |
        python -m py_compile app_final.py
